{"map":"{\"version\":3,\"sources\":[\"/Users/pujasodha/Desktop/coding/weather-react/src/components/title/title.js\",\"/Users/pujasodha/Desktop/coding/weather-react/src/components/form/form.js\",\"/Users/pujasodha/Desktop/coding/weather-react/src/components/weather/weather.js\",\"/Users/pujasodha/Desktop/coding/weather-react/src/App.js\",\"/Users/pujasodha/Desktop/coding/weather-react/src/serviceWorker.js\",\"/Users/pujasodha/Desktop/coding/weather-react/src/index.js\"],\"names\":[\"Title\",\"react_default\",\"a\",\"createElement\",\"className\",\"React\",\"Component\",\"Form\",\"props\",\"this\",\"onSubmit\",\"type\",\"id\",\"name\",\"placeholder\",\"Weather\",\"city\",\"country\",\"temperature\",\"description\",\"error\",\"App\",\"state\",\"undefined\",\"getWeather\",\"_callee\",\"e\",\"response\",\"_ref2\",\"cod\",\"main\",\"sys\",\"weather\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"elements\",\"value\",\"fetch\",\"concat\",\"process\",\"sent\",\"json\",\"_this\",\"setState\",\"temp\",\"stop\",\"title_title\",\"components_form_form\",\"components_weather_weather\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './title.css';\\n\\nclass Title extends React.Component {\\n    render() {\\n        return (\\n            <div className=\\\"Title\\\">\\n                <h1>Weather Finder</h1>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Title;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport './form.css';\\n\\nclass Form extends React.Component {\\n    static propTypes = {\\n        onSubmit: PropTypes.func.isRequired,\\n    };\\n\\n    render() {\\n        const { props } = this;\\n        return (\\n            <form className=\\\"form\\\" onSubmit={props.onSubmit}>\\n                <input type=\\\"text\\\" id=\\\"city\\\" name=\\\"city\\\" placeholder=\\\"Enter City\\\" />\\n\\n                <input type=\\\"text\\\" id=\\\"country\\\" name=\\\"country\\\" placeholder=\\\"Enter Country\\\" />\\n\\n                <button>Get Weather</button>\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default Form;\\n\",\"import React from 'react';\\nimport './weather.css'\\nclass Weather extends React.Component {\\n\\n    render  () {\\n        return (\\n            <div className = 'weather-display'>\\n                {this.props.city && this.props.country && <p>Location: {this.props.city}, {this.props.country}</p>} {\\\"\\\\n\\\"}\\n                {this.props.temperature && <p>Temperature: {this.props.temperature}</p>} {\\\"\\\\n\\\"}\\n                {this.props.description && <p>Conditions: {this.props.description}</p>} {\\\"\\\\n\\\"}\\n                {this.props.error && <p>{this.props.error}</p>}\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Weather\",\"import React, { Component } from 'react';\\nimport Title from './components/title';\\nimport Form from './components/form';\\nimport Weather from './components/weather';\\nimport './App.css';\\n\\nclass App extends Component {\\n    state = {\\n        temperature: undefined,\\n        city: undefined,\\n        country: undefined,\\n        description: undefined,\\n        error: undefined,\\n    };\\n\\n    //call the api data\\n    getWeather = async (e) => {\\n        // prevent page from reloading when button is pressed\\n        e.preventDefault();\\n\\n        const city = e.target.elements.city.value;\\n        const country = e.target.elements.country.value;\\n\\n        const response = await fetch(\\n            `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${\\n                process.env.REACT_APP_WEATHER_API_KEY\\n            }&units=imperial`\\n        );\\n\\n        const { cod, main, name, sys, weather } = await response.json();\\n\\n        if (city && country && cod === 200) {\\n            this.setState({\\n                temperature: main.temp,\\n                city: name,\\n                country: sys.country,\\n                description: weather[0].description,\\n                error: '',\\n            });\\n        } else {\\n            this.setState({\\n                temperature: undefined,\\n                city: undefined,\\n                country: undefined,\\n                description: undefined,\\n                error:\\n                    city || country\\n                        ? 'Location not found. Check your spelling!'\\n                        : 'Please Enter a City & Country',\\n            });\\n        }\\n    };\\n\\n    render() {\\n        return (\\n            <div className=\\\"App\\\">\\n                <Title />\\n                <Form onSubmit={this.getWeather} />\\n                <Weather {...this.state} />\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(30)},16:function(e,t,n){},20:function(e,t,n){},23:function(e,t,n){},25:function(e,t,n){},27:function(e,t,n){},30:function(e,t,n){\"use strict\";n.r(t);var r=n(0),a=n.n(r),o=n(8),c=n.n(o),i=(n(16),n(6)),s=n.n(i),u=n(9),p=n(1),l=n(2),m=n(4),h=n(3),d=n(5),y=(n(20),function(e){function t(){return Object(p.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"Title\"},a.a.createElement(\"h1\",null,\"Weather Finder\"))}}]),t}(a.a.Component)),f=(n(23),function(e){function t(){return Object(p.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this.props;return a.a.createElement(\"form\",{className:\"form\",onSubmit:e.onSubmit},a.a.createElement(\"input\",{type:\"text\",id:\"city\",name:\"city\",placeholder:\"Enter City\"}),a.a.createElement(\"input\",{type:\"text\",id:\"country\",name:\"country\",placeholder:\"Enter Country\"}),a.a.createElement(\"button\",null,\"Get Weather\"))}}]),t}(a.a.Component)),v=(n(25),function(e){function t(){return Object(p.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"weather-display\"},this.props.city&&this.props.country&&a.a.createElement(\"p\",null,\"Location: \",this.props.city,\", \",this.props.country),\" \",\"\\n\",this.props.temperature&&a.a.createElement(\"p\",null,\"Temperature: \",this.props.temperature),\" \",\"\\n\",this.props.description&&a.a.createElement(\"p\",null,\"Conditions: \",this.props.description),\" \",\"\\n\",this.props.error&&a.a.createElement(\"p\",null,this.props.error))}}]),t}(a.a.Component)),b=(n(27),function(e){function t(){var e,n;Object(p.a)(this,t);for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];return(n=Object(m.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(a)))).state={temperature:void 0,city:void 0,country:void 0,description:void 0,error:void 0},n.getWeather=function(){var e=Object(u.a)(s.a.mark(function e(t){var r,a,o,c,i,u,p,l,m;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),r=t.target.elements.city.value,a=t.target.elements.country.value,e.next=5,fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(r,\",\").concat(a,\"&appid=\").concat(\"daaf866203b71ac99a59f88613a3da4a\",\"&units=imperial\"));case 5:return o=e.sent,e.next=8,o.json();case 8:c=e.sent,i=c.cod,u=c.main,p=c.name,l=c.sys,m=c.weather,r&&a&&200===i?n.setState({temperature:u.temp,city:p,country:l.country,description:m[0].description,error:\"\"}):n.setState({temperature:void 0,city:void 0,country:void 0,description:void 0,error:r||a?\"Location not found. Check your spelling!\":\"Please Enter a City & Country\"});case 15:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),n}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(y,null),a.a.createElement(f,{onSubmit:this.getWeather}),a.a.createElement(v,this.state))}}]),t}(r.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(a.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,2,1]]]);","extractedComments":[]}