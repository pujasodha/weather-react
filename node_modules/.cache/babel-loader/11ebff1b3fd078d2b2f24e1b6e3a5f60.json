{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pujasodha/Desktop/coding/weather-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pujasodha/Desktop/coding/weather-react/src/App.js\";\nimport React, { Component } from 'react';\nimport Title from './components/title';\nimport Form from './components/form';\nimport Weather from './components/weather';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // prevent page from reloading when button is pressed\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(process.env.REACT_APP_WEATHER_API_KEY, \"&units=imperial\"));\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                data = _context.sent;\n                debugger;\n                console.log(data);\n\n                if (city && country && cod) {\n                  _this.setState({\n                    temperature: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    description: data.weather[0].description,\n                    error: ''\n                  });\n                } else {\n                  _this.setState({\n                    temperature: undefined,\n                    city: undefined,\n                    country: undefined,\n                    description: undefined,\n                    error: 'Please Enter a City & Country'\n                  });\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        description: this.state.description,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pujasodha/Desktop/coding/weather-react/src/App.js"],"names":["React","Component","Title","Form","Weather","App","state","temperature","undefined","city","country","description","error","getWeather","e","preventDefault","target","elements","value","fetch","process","env","REACT_APP_WEATHER_API_KEY","response","json","data","console","log","cod","setState","main","temp","name","sys","weather"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,WAAW,EAAEH,SAJP;AAKNI,MAAAA,KAAK,EAAEJ;AALD,K;;UASRK,U;;;;;+BAAa,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACX;AACAA,gBAAAA,CAAC,CAACC,cAAF;AAEMN,gBAAAA,IAJK,GAIEK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,IAAlB,CAAuBS,KAJzB;AAKLR,gBAAAA,OALK,GAKKI,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBP,OAAlB,CAA0BQ,KAL/B;AAAA;AAAA,uBAOYC,KAAK,4DAC0BV,IAD1B,cACkCC,OADlC,oBAExBU,OAAO,CAACC,GAAR,CAAYC,yBAFY,qBAPjB;;AAAA;AAOLC,gBAAAA,QAPK;AAAA;AAAA,uBAaQA,QAAQ,CAACC,IAAT,EAbR;;AAAA;AAaLC,gBAAAA,IAbK;AAcX;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,oBAAIhB,IAAI,IAAIC,OAAR,IAAmBkB,GAAvB,EAA4B;AAC1B,wBAAKC,QAAL,CAAc;AACZtB,oBAAAA,WAAW,EAAEkB,IAAI,CAACK,IAAL,CAAUC,IADX;AAEZtB,oBAAAA,IAAI,EAAEgB,IAAI,CAACO,IAFC;AAGZtB,oBAAAA,OAAO,EAAEe,IAAI,CAACQ,GAAL,CAASvB,OAHN;AAIZC,oBAAAA,WAAW,EAAEc,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBvB,WAJjB;AAKZC,oBAAAA,KAAK,EAAE;AALK,mBAAd;AAOD,iBARD,MAQO;AACL,wBAAKiB,QAAL,CAAc;AACZtB,oBAAAA,WAAW,EAAEC,SADD;AAEZC,oBAAAA,IAAI,EAAED,SAFM;AAGZE,oBAAAA,OAAO,EAAEF,SAHG;AAIZG,oBAAAA,WAAW,EAAEH,SAJD;AAKZI,oBAAAA,KAAK,EAAE;AALK,mBAAd;AAOD;;AAjCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAoCJ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,OAAD;AACE,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,WAD1B;AAEE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAJ1B;AAKE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAaD;;;;EA5DeX,S;;AA+DlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Title from './components/title';\nimport Form from './components/form';\nimport Weather from './components/weather';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    description: undefined,\n    error: undefined,\n  };\n\n  //call the api data\n  getWeather = async (e) => {\n    // prevent page from reloading when button is pressed\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const response = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${\n        process.env.REACT_APP_WEATHER_API_KEY\n      }&units=imperial`\n    );\n\n    const data = await response.json();\n    debugger;\n    console.log(data);\n\n    if (city && country && cod) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        description: data.weather[0].description,\n        error: '',\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        description: undefined,\n        error: 'Please Enter a City & Country',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Title />\n        <Form getWeather={this.getWeather} />\n        <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          description={this.state.description}\n          error={this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}